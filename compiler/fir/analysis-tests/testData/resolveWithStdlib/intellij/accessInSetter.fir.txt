FILE: accessInSetter.kt
    public final class DrawableGrid : R|javax/swing/JList<kotlin/String>| {
        public constructor(): R|DrawableGrid| {
            super<R|javax/swing/JList<kotlin/String>|>()
        }

    }
    public final class My : R|kotlin/Any| {
        public constructor(): R|My| {
            super<R|kotlin/Any|>()
        }

        private final val drawableGrid: R|DrawableGrid| = this@R|/My|.R|/My.createDrawableGrid|()
            private get(): R|DrawableGrid|

        private final var useAll: R|kotlin/Boolean| = Boolean(false)
            private get(): R|kotlin/Boolean|
            private set(value: R|kotlin/Boolean|): R|kotlin/Unit| {
                this@R|/My|.F|/My.useAll| = R|<local>/value|
                this@R|/My|.R|/My.drawableGrid|.R|java/awt/Component.isEnabled| = R|<local>/value|.R|kotlin/Boolean.not|()
                when () {
                    R|<local>/value| ->  {
                        this@R|/My|.R|/My.drawableGrid|.R|javax/swing/JList.clearSelection|()
                    }
                    else ->  {
                        this@R|/My|.R|/My.drawableGrid|.R|javax/swing/JList.selectedIndex| = Int(0)
                    }
                }

            }

        private final fun createDrawableGrid(): R|DrawableGrid| {
            ^createDrawableGrid R|/DrawableGrid.DrawableGrid|().R|kotlin/apply|<R|DrawableGrid|>(<L> = apply@fun R|DrawableGrid|.<anonymous>(): R|kotlin/Unit| <inline=Inline, kind=EXACTLY_ONCE>  {
                this@R|special/anonymous|.R|javax/swing/JComponent.isOpaque| = Boolean(false)
                this@R|special/anonymous|.R|javax/swing/JList.visibleRowCount| = Int(3)
                this@R|special/anonymous|.R|javax/swing/JList.addListSelectionListener|(<L> = addListSelectionListener@fun <anonymous>(<unused var>: R|ft<javax/swing/event/ListSelectionEvent, javax/swing/event/ListSelectionEvent?>|): R|kotlin/Unit| <inline=NoInline>  {
                    ^@addListSelectionListener Unit
                }
                )
            }
            )
        }

    }
